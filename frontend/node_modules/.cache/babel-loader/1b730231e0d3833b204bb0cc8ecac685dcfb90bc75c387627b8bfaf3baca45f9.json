{"ast":null,"code":"var _jsxFileName = \"/Users/ananyapattamatta/Desktop/FixIt/FixIt/frontend/src/components/chatbot/ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useChat } from '@nlxai/chat-react';\nimport { chatConfig } from '../../config/chatConfig';\nimport './styles.modules.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  var _chat$messages;\n  const [inputMessage, setInputMessage] = useState('');\n  const chat = useChat(chatConfig); // Get the entire chat object\n\n  console.log('Chat object:', chat); // Debug log to see what we're getting\n\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() && chat !== null && chat !== void 0 && chat.send) {\n      // Check if send exists\n      try {\n        await chat.send(inputMessage); // Use chat.send instead of sendMessage\n        setInputMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"messageList\",\n      children: chat === null || chat === void 0 ? void 0 : (_chat$messages = chat.messages) === null || _chat$messages === void 0 ? void 0 : _chat$messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `message ${message.type}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"messageInput\",\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sendButton\",\n        onClick: handleSendMessage,\n        disabled: !(chat !== null && chat !== void 0 && chat.send) // Disable button if send function isn't available\n        ,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"nCxO2G7rL9azlkHHyZdumqMvjUw=\", false, function () {\n  return [useChat];\n});\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useChat","chatConfig","jsxDEV","_jsxDEV","ChatBot","_s","_chat$messages","inputMessage","setInputMessage","chat","console","log","handleSendMessage","trim","send","error","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","messages","map","message","index","type","text","value","onChange","target","onKeyPress","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ananyapattamatta/Desktop/FixIt/FixIt/frontend/src/components/chatbot/ChatBot.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useChat } from '@nlxai/chat-react';\nimport { chatConfig } from '../../config/chatConfig';\nimport './styles.modules.css';\n\nconst ChatBot = () => {\n  const [inputMessage, setInputMessage] = useState('');\n  const chat = useChat(chatConfig);  // Get the entire chat object\n\n  console.log('Chat object:', chat); // Debug log to see what we're getting\n\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() && chat?.send) {  // Check if send exists\n      try {\n        await chat.send(inputMessage);  // Use chat.send instead of sendMessage\n        setInputMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chatContainer\">\n      <h2>Chatbot</h2>\n      <ul className=\"messageList\">\n        {chat?.messages?.map((message, index) => (\n          <li key={index} className={`message ${message.type}`}>\n            {message.text}\n          </li>\n        ))}\n      </ul>\n      <div className=\"inputContainer\">\n        <input\n          className=\"messageInput\"\n          type=\"text\"\n          value={inputMessage}\n          onChange={(e) => setInputMessage(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Type a message...\"\n        />\n        <button \n          className=\"sendButton\" \n          onClick={handleSendMessage}\n          disabled={!chat?.send}  // Disable button if send function isn't available\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}